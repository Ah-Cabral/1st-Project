@import url('https://fonts.googleapis.com/css2?family=Baloo+Da+2:wght@400;500;600;700&family=Josefin+Slab:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600&family=Mulish:ital,wght@0,200;0,300;0,400;0,500;1,200;1,300;1,400&display=swap');

@import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css');


*{
    margin: 0; /*Utilizado para remover margens de todos os elementos da página*/
    padding: 0; /*Utilizado para remover margens de todos os elementos da página*/
    list-style: none; /*Utilizado para remover estilos (círculo no canto esquerdo do nome em uma unordered list, por exemplo) de todos as listas da página */
    text-decoration: none; /*Utilizado para remover estilos (sublinhado, por exemplo) de todos os links da página */
}

:root{ /*Atribuindo variáveis às fontes*/
    --font-primary:"Baloo Da 2", serif; /*Fonte Primária*/
    --font-secondary: "Josefin Slab", serif; /*Fonte Secundária*/
    --font-action:"Mulish",serif; /*Fonte de Ação, a qual é usada para eventos de interação*/
}

.hamburger{ /*A div com a class hamburger tem como função conter as lines*/
    width: 2em;
    height: 2em;
    position: fixed; /*Definido um posicionamento fixo para o hamburger, pois, independentemente de onde a página "se mova", o menu permanece no lado superior direito.*/
    right: 2em;
    top: 2em;
    z-index: 100; /*Z-Index: index de determinação de profundidade, nesse caso, utiliza-se para colocar o hamburger como Z-Index de maior valor.*/
    display: flex; /*Display flex é utilizado no intuito de organizar os elementos de forma dinâmica, em que, caso haja necessidade, eles se reorganizem.*/
    flex-direction: column; /*Utilizado para indicar que os elementos serão distrubuídos um abaixo do outro, e não ao lado.*/
    justify-content: space-evenly; /*Utilizado para delimitar espaçamento uniforme entre as linhas*/
    cursor: pointer; /*Utilizado para indicar interatividade*/
    transition: right 1s;
}

.show-menu .hamburger{ /*Aqui foi definido um novo pos. para o menu hamburger, quando estiver com o show-menu*/
    right: 16em;
}

.line{
    width: 100%; /*É definido um width de 100% para que percorra toda região da div, caracterizando assim uma linha.*/
    height: .125rem;
    
    background: #FDC830;  
    
    background: -webkit-linear-gradient(to right, #F37335, #FDC830);  
    
    background: linear-gradient(to right, #F37335, #FDC830); 

    transition: transform 1s;
}

.show-menu #line1 {
    width: 100%; /*É definido um width de 100% para que percorra toda região da div, caracterizando assim, uma linha.*/
    height: .125rem;
    box-shadow: none;
    transform: rotate(50deg) translate(0.3em, 0.55em); /*Para que o x seja inicialmente formado, é definida uma rotação de 60 graus, e uma troca de posição*/
}

.show-menu #line3{
    width: 100%; /*É definido um width de 100% para que percorra toda região da div, caracterizando assim uma linha.*/
    height: .125rem;
    box-shadow: none;
    transform: rotate(-48deg) translate(0.28em, -0.48em); /*Para que o x seja finalizado, é definida outra rotação de -60 graus, e uma troca de posição que caracterize o cruzamento.*/
}

.show-menu #line2{
    opacity: 0;
}

.hamburger span{ /*Essa span é responsável pela indicação de fechamento do menu*/
    position: absolute; /*Possui posição absoluta, para poder ser movimentada em qualquer posicionamento, a partir do elemento pai*/
    font-family: var(--font-action); /*Fonte de ação escolhida*/
    color: #ffffff;
    left: 3em; /*Distância à esquerda*/
    height: 2em; /*Altura e largura, para aumentar espaçamento e tamanho*/
    width: 6em;
    display: flex; /*Display flex, para flexbilizar a posição do elemento contido (texto)*/
    justify-content: center; /*Nesse caso, ao centro, tanto no eixo X, quanto no eixo Y*/
    align-items: center;
    border-radius: 2px; /*border-radius, para arredondar as bordas da span*/
    
    /*Definindo background em gradiente*/
    background: #FDC830;  
    
    background: -webkit-linear-gradient(to right, #F37335, #FDC830);  
    
    background: linear-gradient(to right, #F37335, #FDC830); 

    /*Opacidade padrão 0, pois só é mostrado quando ocorrer interação (hover) com o menu hamburger dentro do hamburger.show-menu*/
    opacity: 0;

    transition: opacity 1s;

}

.hamburger span::before{ /*A partir daqui, será criado um pseudo elemento, onde será feito um triângulo que apontará para o X*/
    content: "";
    position: absolute;
    border-right: 0.5em solid #F37335;
    border-left: 0.5em solid transparent;
    border-top: 0.5em solid transparent;
    border-bottom: 0.5em solid transparent;
    left: -1em;
}


.show-menu .hamburger:hover span{
    opacity: 1;
}

header{ /*Configura-se a header para ocupar 100% do espaço do container (div que envolve toda página), tanto na largura (width), quanto
    na altura (height).*/
    width: 100%;
    height: 100vh; /*vh: Altura da visão, ao pé da letra*/
    overflow: hidden; /*Quando o overflow é desabilitado, removemos a possibilidade do cabeçalho passar o tamanho da janela
    e gerar uma barra de rolagem horizontal.*/
    position: relative; /*O posicionamento relativo é escolhido para que os elementos que possuam relacionamento absoluto
    possam se posicionar em qualquer localização desejada.*/
}

.img-wrapper{ /*Configura-se a img-wrapper para ocupar 100% do espaço da header, tanto na largura (width), quanto
    na altura (height).*/
    width: 100%;
    height: 100%;
    overflow: hidden; /*Quando o overflow é desabilitado, removemos a possibilidade do cabeçalho passar o tamanho da janela
    e gerar uma barra de rolagem horizontal.*/
    background-color: #110e0e;
}

.img-wrapper img{ /*Configura-se a imagem para ocupar 100% do espaço do img-wrapper (embrulhador de imagem), tanto na largura (width), quanto
    na altura (height).*/
    width: 100%;

    height: 100%;

    object-fit: cover; /*Quando o object-fit: cover é escolhido, removemos o problema de achatamento da imagem, caso a tela seja
    muito grande ou muito pequena.;*/

    opacity: 0.65; /*Diminuiu-se a opacidade, com o objetivo de buscar destacar mais o texto presente na página.*/

    animation: zoom 15s; /*Animação de zoom atribuída à imagem*/
}

.banner{
    position: absolute; /*Ao invés de se posicionar de uma maneira estática (padrão), será atribuído à classe, um posicionamento absoluto, onde pode-se posicionar qualquer elemento de acordo com o elemento*/
    
    top: 30%; /*Posicionamentos são definidos baseados em top, bottom, left e right, nesse caso foi escolhido 30% de espaçamento do topo*/
    
    left: 15%; /*E 15% de espaçamento da esquerda*/
}

.banner h1{
    
    color: #ffffff;
    
    font-size: 3em; /*Não é viável a utilização de pixels, pelo fato de ser um tamanho estático,
                  devido a isso, existem 2 alternativas: em -> unidade relativa ao tamanho da fonte principal (elemento pai, que tem como padrão 16px).
                                                         rem -> unidade relativa ao tamanho da fonte principal da página, que é definido.*/
    
    font-family: var(--font-primary); /* Com o font-family: escolhe-se a fonte necessária, além dela escolhe-se também uma fonte alternativa; */
    
    font-weight: 200; /*C om o font-weight: escolhe-se o peso da fonte escolhida, afinando ou deixando-a mais "gorda" */
    
    text-shadow: .11em .05em 3px rgba(0, 0, 0, .6) ; /*O text-shadow possui as mesmas propriedades do box-shadow       */
    
    margin-bottom: .2em; /*margin-bottom é utilizado para inserir uma margem na parte inferior do elemento*/

    animation: movebanner 1.5s; /* O movebanner tem a característica de aparecer, a partir do h1, um elemento após o outro, por isso os tempos diferentes*/
}

.banner p{
    font-family: var(--font-secondary);
    
    font-size: 2em;
    
    color: #ffffff;
    
    text-shadow: .11em .05em 3px rgba(0, 0, 0, 1) ; /*Ao utilizar o rgba pode-se escolher: R- red (qtd. de vermelho), G- Green (qtd. de verde) B- Blue (qtd. de azul), A - Alpha (transparência da cor)*/
    
    margin-bottom: 1em;

    animation: movebanner 1.8s;
}

.banner button{

    font-family: var(--font-action);

    color: #ffffff;

    /*Para a cor do button, será utilizado um gradient, pego do site uigradients*/
   
    background: #FDC830;  
   
    background: -webkit-linear-gradient(to right, #F37335, #FDC830);  

    background: linear-gradient(to right, #F37335, #FDC830); 

    padding: 1em 3em; /*Coloca-se o espaçamento característico do botão*/

    border: none;/*Retira-se a borda do botão*/

    text-transform: uppercase; /*Ao utilizar isso, o texto presente no botão fica totalmente maiúsculo*/

    border-radius: 4px ; /*Utiliza-se o border-radius para fazer com que o botão possua uma borda arredondada*/

    cursor: pointer; /*Utilizado para indicar alteração ao ocorrer interação com o botão*/

    transition:color 1s;

    animation: movebanner 2s;
}

.banner button:hover{ /*Evento hover é um evento de interação, ou seja, quando o mouse entrar em contato com o button*/
    opacity: 0.9; /* a opacidade diminuirá 10%*/
    color: #1a0c05; /*A cor da fonte mudará*/
}

@keyframes zoom { /*Utilizar @keyframes é trabalhar com animações, nesse caso, iremos inserir uma animação de zoom*/
    0%{/*No início da animação*/
        transform: scale(1.3); /*Será iniciada a imagem com um zoom de 30% na imagem*/
    }

    100%{/*No fim da animação*/
        transform: scale(1);/*Será iniciada a imagem com o tamanho original*/
    }
}

@keyframes movebanner{
    0%{/*No início da animação*/
        transform: translateY(6em)/*O elemento escolhido sofrerá uma troca de posição na distância de 6em (96px)*/
        rotateY(-30deg);
        opacity: 0; /*O elemento escolhido sofrerá uma rotação de -30 graus*/
    }
    100%{/*No final da animação*/
        transform: translateY(0em) /*O elemento escolhido voltará para sua posição original*/
        rotateY(0deg); 
        opacity: 1;/*O elemento escolhido sofrerá uma rotação de 30 graus, voltando para o posicionamento incial*/
    }
    
}

.sidebar{ 
    width: 20em; /*É atribuído ao sidebar uma largura de 20em (Aprox. 320px)*/
    height: 100vh; /*É atribuída uma altura de 100vh contemplando toda a página.*/
    background-color: #ffffff;
    position: fixed; /*A posição escolhida é a fixa, pois sempre ficará no lado direito da página (animação para esconder e aparecer será feita)*/
    top: 0; /*Distância do topo*/
    right: -20em; /*Distância da direita*/
    transition: all 1s; /*Configura-se que todas as transições que ocorrerem no sidebar (nesse caso só ocorre uma) terão o tempo de 1 segundo.*/
}

.show-menu .sidebar{
    right: 0em;
}

.menu{
    position: absolute; /*Posicionamento absoluto definido (lembrando que atua para permitir que qualquer elemento se posicione de acordo com o elemento pai)*/
    top: 40%; 
    left: 50%;
    align-items: center; /*Alinhamento dos itens do menu ao centro*/
    transform: translate(-50%, -50%); /*Ocorre a transformação do menu, modificando a posição e colocando de uma forma mais centralizada*/
}

.menu-item{
    text-align: center; /*Alinhamento do texto do menu ao centro*/
    margin-bottom: .5em; /*Insere-se uma borda entre os itens*/
}

.menu-link{
    font-size: 2em;
    font-family: var(--font-action);
    color: #fd9d30;
    /*Defini-se a cor do link (normalmente)*/
    transition: color 1s; /*Insere-se o tempo de 1 segundo para que a transição da cor para o estado hover (abaixo) ocorra*/
}

.menu-link:hover{
    opacity: 0.9;
}

.social-media{
    position: absolute; /*Posicionamento absoluto definido*/
    bottom: 2em; /*Distância da parte inferior definida*/
    width: 100%;
    display: flex;
    justify-content: space-evenly; /*Distribuição uniforme definida*/
}

.social-media i{
    color: #fd9330;
    height: 2.5em;
    width: 2.5em;
    font-size: 2em;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: color 1s; /*Insere-se o tempo de 1 segundo para que a transição da cor para o estado hover (abaixo) ocorra*/
}

.social-media i:hover{
    opacity: .9 ; /*Efeito de clareamento, caracterizado por perca de opacidade (já que o fundo é branco).*/
}

.conhecimentos{
    /*A sessão conhecimentos será feita em display grid*/
    display: grid;
    grid-template-columns: repeat(16,1fr); /*Inicialmente, ao tratar das colunas, repetiremos 16 colunas, de 1 frame cada*/
    grid-template-rows: repeat(4, 4em); /*E ao tratar das linhas, serãp 4 linhas, de 4em cada*/
    row-gap: 1em; /*Gap = Vão*/
}

.sessao-conhecimentos{
    margin-bottom: 2em;
}

/*Pega-se o primeiro conhecimento (para diferenciar uma classe repetida, utilizase o ":nth-child()" junto ao índice desejado*/
.conhecimento:nth-child(1){
    grid-column: 3 / 7; /*Com o display grid, você posiciona o elemento de uma coluna (3) à outra que você deseja (7) = espaçamento de 4*/
    grid-row: 1 / 3; /*A mesma coisa é feita com as linhas */
}

.conhecimento:nth-child(2){
    grid-column: 12 / 15;
    grid-row: 1 / 3;
}

.conhecimento:nth-child(3){
    grid-column: 2 / 5;
    grid-row: 4 / 6;
}

.conhecimento:nth-child(4){
    grid-column: 14 / 17;
    grid-row: 4 / 6;
}

.sessao-header{
    display: flex;
    align-items: center; /*Lembrete importante: align-items se refere ao alinhamento vertical*/
    justify-content: center; /* justify-content se refere ao alinhamento horizontal */
}

.sessao-header h1{
    font-family: var(--font-primary);
    font-size: 3em;
    color: #fd9d30;
    border-bottom: solid 3px #fd9d30;
    margin-bottom: 1.5em;
}

.conhecimento-header{
    display: flex; /*Ao fazer isso, o ícone e o título já ficam um ao lado do outro*/
    align-items: center;
    color: #fd9d30;
}

.conhecimento-header i{ /*Lembrete: Os ícones são tratados como fontes, então ao importar o font-awesome e escolher um ícone, altere
    o tamanho dele da seguinte forma:*/
    font-size: 2.5em;
}

.conhecimento-header h3{
    font-family: var(--font-secondary); /*É escolhida a fonte secundária para o h3*/
    font-size: 2em; /*Além do */
    padding-left: .5em;
}

.conhecimento-text{
    font-family: var(--font-secondary); /*É escolhida a fonte secundária para o texto do conteúdo*/
    font-size: 1.2em;
    margin-top: 1em; /*Foi inserida uma margem acima do texto, para distanciá-lo do header*/
}

.conhecimentos-img-wrapper{
    grid-column: 7 / 11; /*Defini-se o posicionamento do img-wrapper com o layout grid*/
    grid-row: 1 / 4;
    width: 100%;
}

.conhecimentos-img-wrapper img{
    object-fit: cover; /*A propriedade object-fit foi criada com finalidade 
    de controlar a forma como a imagem ocupa a área do box. 
    para imagens inseridas diretamente na marcação HTML 
    ( e não as inseridas com uso de background-image ).*/
    width: 100%;
}

.projetos{
    display: flex;
    justify-content: space-evenly; /*Lembrete -> space-evenly: Espaçamento UNIFORME*/
}

.card{
    width: 18em;
    height: 25em;
    position: relative; /*Lembrete: O position relative posiciona o elemento em relação a si mesmo. 
                        Ou seja, o ponto zero será o canto superior esquerdo, e ele começará a contar a partir dali.*/
    padding-bottom: 1em;
}

.card-img-wrapper{
    width: 100%;
    height: 100%;
    background-color: #262626;
    border-radius: .75em;
}

.card-img-wrapper img{
    object-fit: cover;
    width: 100%;
    height: 100%;
    opacity: 75%;
    border-radius: .75em;
}

.card:hover .card-img-wrapper img{
    opacity: 50%;
    transition: opacity .3s;
}

.card-info{
    opacity: 0; /*Inicialmente tem opacidade 0*/
    visibility: hidden; /*E visibilidade hidden*/
    position: absolute; /*Lembrete: O position: absolute; serve para que você possa posicionar qualquer elemento de acordo 
                        com o elemento pai que tenha um position diferente de static.
                        Ele se utiliza do ponto superior esquerdo de outros elementos.*/
    bottom: 0; 
    /*Para posicionar as informações dentro da imagem (do cartão, no caso), 
    defini-se que a distância das informações para o final do cartão é zero.*/
    padding: 2em;
    text-shadow: .5em .15em .25em rgba(0, 0, 0, 0.384); /* offset-x | offset-y | blur-radius | color */
}

.card-info h2{
    font-family: var(--font-primary);
    color:#fd9d30;
}

.card-info h3{
    font-family: var(--font-secondary);
    font-weight: bolder; /*Lembrete: font-weight: PESO da fonte*/
    color: #ffffff;
    padding-bottom: .5em;
}

.card-info p{
    font-family: var(--font-secondary);
    color: #ffffff;
    padding-bottom: .6em;
}

.card-info button{

    width: 8em;

    height: 2.5em;

    font-family: var(--font-action);

    font-size: .75em;

    color: #ffffff;

    /*Para a cor do button, será utilizado o mesmo gradiente utilizado no início, pego do site uigradients*/
    
    background: #FDC830;  
    
    background: -webkit-linear-gradient(to right, #F37335, #FDC830);  

    background: linear-gradient(to right, #F37335, #FDC830); 

    padding: .3em 1.2em; /*Coloca-se o espaçamento característico do botão*/

    border: none;/*Retira-se a borda do botão*/

    border-radius: .5em ; /*Utiliza-se o border-radius para fazer com que o botão possua uma borda arredondada*/

    cursor: pointer; /*Utilizado para indicar alteração ao ocorrer interação com o botão*/

    box-shadow: .5em .15em .3em rgba(0, 0, 0, 0.26); /* offset-x | offset-y | blur-radius | color */
}  

.card:hover .card-info {
    bottom: 2em; /*O card subirá da posição 0 para a posição 2em*/
    opacity: 1; /*A opacidade será total*/
    visibility: visible;
    transition: all .4s; /*A transição disso terá uma duração de meio segundo*/ 
}

.card-info button:hover{
    opacity: 0.9; /* a opacidade diminuirá 10%*/
    color: #1a0c05; /*A cor da fonte mudará*/
    transition: .5s; /*A transição disso terá uma duração de meio segundo*/ 
}